{"version":3,"sources":["img/Logo_Black.png","img/diagonElley.png","img/chefRemy.png","img/queueApp.png","components/AboutMe/IMG_0561.png","img/Logo_KO.png","img/GithubB.png","img/TwitterB.png","img/AngelistB.png","img/LinkedInB.png","components/Navbar/Navbar.js","components/Intro/Intro.js","components/Projects/Projects.js","components/Experince/Experience.js","components/AboutMe/AboutMe.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","src","logo","alt","href","Intro","Projects","id","queueExt","target","chefRemy","diagonElley","Experience","AboutMe","picture","width","height","frameborder","allowtransparency","allow","Footer","twitter","linkedin","github","angelist","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c1580dda.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo_Black.54050dc5.png\";","module.exports = __webpack_public_path__ + \"static/media/diagonElley.484f428f.png\";","module.exports = __webpack_public_path__ + \"static/media/chefRemy.6b29451c.png\";","module.exports = __webpack_public_path__ + \"static/media/queueApp.e61fe630.png\";","module.exports = __webpack_public_path__ + \"static/media/IMG_0561.17a0ccd9.png\";","module.exports = __webpack_public_path__ + \"static/media/Logo_KO.7a89ac8a.png\";","module.exports = __webpack_public_path__ + \"static/media/GithubB.6cc1a508.png\";","module.exports = __webpack_public_path__ + \"static/media/TwitterB.4ce7b318.png\";","module.exports = __webpack_public_path__ + \"static/media/AngelistB.08a90552.png\";","module.exports = __webpack_public_path__ + \"static/media/LinkedInB.538f5d98.png\";","import React from 'react'\n//import {Link} from 'react-router-dom'\nimport logo from '../../img/Logo_Black.png'\nimport './navbar.css'\n\nconst Navbar = () => {\n  return (\n  <div className=\"navbar\">\n\n    <div className=\"left\">\n    <img src={logo} className='nav-logo' alt='logo'></img>\n    <a\n      href={'mailto:nlashner@gmail.com'}\n      className='nav-link'\n      >nlashner@gmail.com</a>\n    </div>\n\n    <div className=\"right\">\n    <a href='#projects' className='right-item nav-link'>My Projects</a>\n    <a href='#experience' className='right-item nav-link'>Experience</a>\n    <a  href='#aboutMe' className='right-item nav-link'>About Me</a>\n    </div>\n  </div>\n  )\n}\n\nexport default Navbar\n","import React from 'react'\nimport './intro.css'\n\nconst Intro = () => {\n  return (\n    <div className='intro-container'>\n      <div className='name-container'>\n      <div className='name'>Nora</div>\n      <div className='name'>Lashner</div>\n      <div className='rectangle'></div>\n      </div>\n      <p className=\"intro-text\">Hi! I’m a fullstack software engineer based in New York City.  After working on the go-to-market side of companies, I decided I wanted to help build products rather than sell them.  I love solving problems, desiging processes, and meeting new people. If you’re in New York and looking for a fullstack engineer to join your team, let’s chat!</p>\n    </div>\n  )\n}\n\nexport default Intro\n","\nimport React from 'react'\nimport './projects.css'\nimport logo from '../../img/Logo_Black.png'\nimport diagonElley from '../../img/diagonElley.png'\nimport chefRemy from '../../img/chefRemy.png'\nimport queueExt from '../../img/queueApp.png'\n\nconst Projects = () => {\n  return (\n    <div>\n      <div id='projects'>\n      <div className='projects-title'>My Projects</div>\n      <div className='projects-container'>\n\n        <div className='project'>\n          <img src={queueExt} className='project-image' alt='project-picture' ></img>\n          <img src={queueExt} className='project-image-mobile' alt='project-picture' ></img>\n          <div className='project-info'>\n            <div className='project-title'>Queue</div>\n            <div className='project-desc'>Queue is a Google Chrome extension and a web application that allows users to save music tracks from all different sites to listen to it later.</div>\n            <a href='https://github.com/nlashner/queueapp' target='_blank' className='link'>Github</a>\n            {/* <a className='link'>Website</a> */}\n          </div>\n        </div>\n\n        <div className='project'>\n        <img src={chefRemy} className='project-image-mobile' alt='project-picture'></img>\n          <div className='project-info'>\n            <div className='project-title'>Chef Remy</div>\n            <div className='project-desc'>Chef Remy is a website and an Alexa skill that allows users to manage their kitchen inventory, and get recipes based on items they have in stock.</div>\n            <a  href='https://github.com/GHP-Warpaint/remi' target='_blank' className='link'>Github</a>\n            <a href='https://chef-remy.herokuapp.com/' target='_blank' className='link'>Website</a>\n          </div>\n          <img src={chefRemy} className='project-image' alt='project-picture'></img>\n        </div>\n\n        <div className='project'>\n        <img src={diagonElley} className='project-image' alt='project-picture'></img>\n        <img src={diagonElley} className='project-image-mobile' alt='project-picture'></img>\n          <div className='project-info'>\n            <div className='project-title'>Diagon E-lley</div>\n            <div className='project-desc'>Diagon E-lley is an e-commerce site that allows Hogwarts students to get supplies that they might need for the upcoming school year.</div>\n            <a href='https://github.com/Rosalina-and-luma/grace-shopper' target='_blank' className='link'>Github</a>\n            <a href='https://diagon-e-lley.herokuapp.com/' target='_blank' className='link'>Website</a>\n          </div>\n        </div>\n\n      </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Projects\n","import React from 'react'\nimport './experience.css'\n\n\nconst Experience = () => {\n  return (\n    <div id='experience'>\n      <div className='experience-container'>\n        <div className='experience-title'>Experience</div>\n        <div className='experience-info'>I’ve been lucky enough to wear a lot of hats in my career, from recruiting and office management, to sales operations and analytics. This has given me the chance to figure out what I love to do, and what I could do without.  I love solving difficult problems, working in a team and building relationships with my peers, and creating seamless experiences for clients.</div>\n        <a href='https://drive.google.com/file/d/1tGMGJA75P6B5L_vNEYoGf4FDKoKxrh3P/view' target='_blank' className='resume'>View My Resume</a>\n      </div>\n\n    </div>\n  )\n}\n\nexport default Experience\n","import React from 'react'\nimport picture from './IMG_0561.png'\nimport './aboutMe.css'\n\nconst AboutMe = () => {\n  return (\n    <div id='aboutMe' className=\"aboutMe-conatiner\">\n\n      <div className='aboutMe-info'>\n      <img src={picture} className=\"photo\" alt=\"nora-photo\"></img>\n      <div className=\"title\">About Me</div>\n      <div className='aboutMe-info'>\n      I love the constant energy of New York City and spend most of my time outside of work taking advantage of all the city has to offer. On a typical (pre-covid) weekend you can find me at oyster happy hour at the Wayland, eating dim sum at Nom Wah Tea Parlor, or on the dance floor at Mister Sundays.\n      </div>\n      </div>\n\n      <div className='spotify-iframe'>\n      <iframe src=\"https://open.spotify.com/embed/playlist/6i1qp1b9E0c0BDGNaryPIs\" width=\"300\" height=\"470\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n      </div>\n\n    </div>\n  )\n}\n\nexport default AboutMe\n","import React from 'react'\nimport logo from '../../img/Logo_KO.png'\nimport github from '../../img/GithubB.png'\nimport twitter from '../../img/TwitterB.png'\nimport angelist from '../../img/AngelistB.png'\nimport linkedin from '../../img/LinkedInB.png'\nimport './footer.css'\n\nconst Footer = () => {\n  return (\n    <div>\n    <div className='footer'>\n      <div>\n      <img src={logo} alt='logo' className='logo-footer'></img>\n      </div>\n      <div>\n        <a href='https://twitter.com/nlashner' target='_blank'>\n          <img src={twitter} alt='logo' className='social-icon'/>\n        </a>\n        <a href='https://www.linkedin.com/in/noralashner/' target='_blank'>\n          <img src={linkedin} alt='logo' className='social-icon'></img>\n        </a>\n        <a href='https://github.com/nlashner' target='_blank'>\n          <img src={github} alt='logo' className='social-icon'></img>\n        </a>\n        <a href='https://angel.co/u/nora-lashner-1' target='_blank'>\n          <img src={angelist} alt='logo' className='social-icon'></img>\n        </a>\n      </div>\n      <div className='footer-email'>nlashner@gmail.com</div>\n    </div>\n\n    </div>\n  )\n}\n\nexport default Footer\n","import React from 'react';\nimport Navbar from './components/Navbar/Navbar'\nimport Intro from './components/Intro/Intro'\nimport Projects from './components/Projects/Projects'\nimport Experience from './components/Experince/Experience'\nimport AboutMe from './components/AboutMe/AboutMe'\nimport Footer from './components/Footer/Footer'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <div className='app-container'>\n      <Navbar />\n      <Intro />\n      <Projects />\n      <Experience />\n      <AboutMe />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router >\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}